#!/bin/bash

dialect=$(snapctl get dialect)
mysql_host=$(snapctl get mysql.host)
mysql_user=$(snapctl get mysql.user)
mysql_name=$(snapctl get mysql.name)
mysql_pass=$(snapctl get mysql.pass)
postgres_host=$(snapctl get postgres.host)
postgres_user=$(snapctl get postgres.user)
postgres_name=$(snapctl get postgres.name)
postgres_pass=$(snapctl get postgres.pass)
port=$(snapctl get port)
interface=$(snapctl get interface)
tmp_path="/tmp/semaphore",
cookie_hash=$(snapctl get cookie-hash)
cookie_encryption=$(snapctl get cookie-encryption)
email_sender=$(snapctl get email-sender)
email_host=$(snapctl get email-host)
email_port=$(snapctl get email-port)
web_host=$(snapctl get web-host)
ldap_binddn=$(snapctl get ldap-binddn)
ldap_bindpassword=$(snapctl get ldap-bindpassword)
ldap_server=$(snapctl get ldap-server)
ldap_searchdn=$(snapctl get ldap-searchdn)
ldap_searchfilter=$(snapctl get ldap-searchfilter)

ldap_mappings_dn=$(snapctl get ldap-mappings.dn)
ldap_mappings_mail=$(snapctl get ldap-mappings.mail)
ldap_mappings_uid=$(snapctl get ldap-mappings.uid)
ldap_mappings_cn=$(snapctl get ldap-mappings.cn)

telegram_chat=$(snapctl get telegram-chat)
telegram_token=$(snapctl get telegram-token)
concurrency_mode=$(snapctl get concurrency-mode)
max_parallel_tasks=$(snapctl get max-parallel-tasks)
port=$(snapctl get port)

if [ -z "$dialect" ]
then
  dialect=bolt
  snapctl set dialect="$dialect"
fi

if [ -z "$cookie_hash" ]
then
  cookie_hash=$(tr -dc A-Za-z0-9 </dev/urandom | head -c 32 ; echo '')
  snapctl set cookie-hash="$cookie_hash"
fi

if [ -z "$cookie_encryption" ]
then
  cookie_encryption=$(tr -dc A-Za-z0-9 </dev/urandom | head -c 32 ; echo '')
  snapctl set cookie-encryption="$cookie_encryption"
fi

if [ -z "$max_parallel_tasks" ]
then
  max_parallel_tasks=0
  snapctl set max-parallel-tasks="$max_parallel_tasks"
fi

if [ -z "$email_alert" ]
then
  email_alert=false
  snapctl set email-alert="$email_alert"
fi

if [ -z "$telegram_alert" ]
then
  telegram_alert=false
  snapctl set telegram-alert="$telegram_alert"
fi

if [ -z "$ldap_enable" ]
then
  ldap_enable=false
  snapctl set ldap-enable="$ldap_enable"
fi

if [ -z "$ldap_needtls" ]
then
  ldap_needtls=false
  snapctl set ldap-needtls="$ldap_needtls"
fi

mkdir -p ${SNAP_USER_COMMON}/repositories

tee "$SNAP_USER_COMMON/config.json" <<CONFIG
{
 	"mysql": {
 		"host": "${mysql_host}",
 		"user": "${mysql_user}",
 		"pass": "${mysql_pass}",
 		"name": "${mysql_name}"
 	},
 	"postgres": {
 		"host": "${postgres_host}",
 		"user": "${postgres_user}",
 		"pass": "${postgres_pass}",
 		"name": "${postgres_name}"
 	},
 	"bolt": {
 		"host": "${SNAP_USER_COMMON}/database.boltdb"
 	},
	"dialect":				"${dialect}",
 	"port": 				"${port}",
 	"interface": 			"${interface}",
 	"tmp_path": 			"${SNAP_USER_COMMON}/repositories",
 	"cookie_hash": 			"${cookie_hash}",
 	"cookie_encryption": 	"${cookie_encryption}",
 	"email_sender": 		"${email_sender}",
 	"email_host": 			"${email_host}",
 	"email_port": 			"${email_port}",
 	"web_host": 			"${web_host}",
 	"ldap_binddn": 			"${ldap_binddn}",
 	"ldap_bindpassword": 	"${ldap_bindpassword}",
 	"ldap_server": 			"${ldap_server}",
 	"ldap_searchdn": 		"${ldap_searchdn}",
 	"ldap_searchfilter": 	"${ldap_searchfilter}",
 	"ldap_mappings": {
 		"dn": 	"${ldap_searchfilter_dn}",
 		"mail": "${ldap_searchfilter_mail}",
 		"uid": 	"${ldap_searchfilter_uid}",
 		"cn": 	"${ldap_searchfilter_cn}"
 	},
 	"telegram_chat": 		"${telegram_chat}",
 	"telegram_token": 		"${telegram_token}",
 	"concurrency_mode": 	"${concurrency_mode}",
 	"max_parallel_tasks": 	${max_parallel_tasks},
 	"email_alert": 			${email_alert},
 	"telegram_alert": 		${telegram_alert},
 	"ldap_enable": 			${ldap_enable},
 	"ldap_needtls": 		${ldap_needtls}
}
CONFIG

if [ ! -d $SNAP_USER_COMMON/ansible_env ]
then
	tar xvzf $SNAP/ansible_env.tar.gz -C $SNAP_USER_COMMON

	ln -sf $SNAP/usr/bin/python3 $SNAP_USER_COMMON/ansible_env/bin/python3

	sed -i "s@^VIRTUAL_ENV=\".*@VIRTUAL_ENV=\"$SNAP_USER_COMMON/ansible_env\"@g" $SNAP_USER_COMMON/ansible_env/bin/activate

	sed -i "s@/root/parts/ansible/build/ansible_env/@$SNAP_USER_COMMON/ansible_env/@g" $SNAP_USER_COMMON/ansible_env/bin/*

	sed -i "s@/build/semaphore/parts/ansible/build/ansible_env/@$SNAP_USER_COMMON/ansible_env/@g" $SNAP_USER_COMMON/ansible_env/bin/*
fi

ANSIBLE_CONFIG="
[defaults]
host_key_checking = False
stdout_callback = yaml
bin_ansible_callbacks = yes
local_tmp = /tmp
"

source $SNAP_USER_COMMON/ansible_env/bin/activate

semaphore service --config "$SNAP_USER_COMMON/config.json"

